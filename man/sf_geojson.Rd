% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sf_geojson.R
\name{sf_geojson}
\alias{sf_geojson}
\title{sf to GeoJSON}
\usage{
sf_geojson(sf, atomise = FALSE, simplify = TRUE, downcast = FALSE)
}
\arguments{
\item{sf}{simple feature object}

\item{atomise}{logical indicating if the sf object should be converted into a vector
of GeoJSON objects}

\item{simplify}{logical indicating if sf objects without property columns should simplify
(\code{TRUE}) into a vector of GeoJSON, or return a Featurecollection with
empty property fields (\code{FALSE}). If \code{atomise} is TRUE this argument is ignored.}

\item{downcast}{lotical indicating whether to down-cast MULTI objects to their simpler form.
if \code{atomise} is TRUE this argument is ignored.}
}
\value{
vector of GeoJSON
}
\description{
Converts `sf` objects to GeoJSON
}
\details{
specifying \code{downcast = TRUE} will convert
\itemize{
  \item{MULTIPOINT}{ to POINT}
  \item{MULTILINESTRING}{ to LINESTRING}
  \item{MULTIPOLYGON}{ to POLYGON}
}

All \code{property} values associated with the MULTI geometries will be copied to
the new geometry. See examples. Downcasting is not supported for GEOMETRYCOLLECTIONs
}
\examples{
\dontrun{
library(sf)
sf <- sf::st_sf(geometry = sf::st_sfc(list(sf::st_point(c(0,0)), sf::st_point(c(1,1)))))
sf$id <- 1:2
sf_geojson(sf)
sf_geojson(sf, atomise = T)

ls <- st_linestring(rbind(c(0,0),c(1,1),c(2,1)))
mls <- st_multilinestring(list(rbind(c(2,2),c(1,3)), rbind(c(0,0),c(1,1),c(2,1))))
sfc <- st_sfc(ls,mls)
sf <- st_sf(sfc)
sf_geojson( sf )
sf_geojson( sf, simplify = FALSE )

## down-casting the MULTILINESTRING to two LINESTRINGS
sf <- st_sfc( mls )
sf <- st_sf( sf )
sf$id <- 1
sf_geojson( sf, simplify = FALSE, downcast = TRUE )


}

}
