
R version 3.6.1 (2019-07-05) -- "Action of the Toes"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin15.6.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "TargomoR"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('TargomoR')
Welcome to TargomoR!

This package talks to the Targomo API. To use it you will need an API Key. Get yours at:

* https://targomo.com/developers/pricing/

Please also be aware of the Targomo terms and conditions:

* https://account.targomo.com/legal/terms

Stop this message by setting `options(targomor.quiet = TRUE)`
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("attribution")
> ### * attribution
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: attribution
> ### Title: Add Targomo Attributions
> ### Aliases: attribution attributionFreeIframe attributionOtherIframe
> ###   attributionLink addTargomoAttribution
> 
> ### ** Examples
> 
> # return the attribution link
> attributionLink()
[1] "https://targomo.com/developers/resources/attribution/"
> 
> 
> 
> 
> cleanEx()
> nameEx("capabilities")
> ### * capabilities
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: capabilities
> ### Title: Get Account Capabilities
> ### Aliases: capabilities getTargomoCapabilities print.tgm_capabilities
> 
> ### ** Examples
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("formatting")
> ### * formatting
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: formatting
> ### Title: Format Edgeweights (times and distances)
> ### Aliases: formatting numericEdgeWeight prettyEdgeWeight
> 
> ### ** Examples
> 
> numericEdgeWeight("1hr 30m", "time") # 5400
Warning in numericEdgeWeight("1hr 30m", "time") :
  NAs introduced by coercion
[1] NA
> numericEdgeWeight("1ml", "distance") # 1609
[1] 1609
> 
> prettyEdgeWeight(1245, "time") # 30min 45s
[1] "20min 45s"
> prettyEdgeWeight(1245, "distance") # 1km 245m
[1] "1km 245m"
> 
> 
> 
> 
> cleanEx()
> nameEx("getTargomoMapURL")
> ### * getTargomoMapURL
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getTargomoMapURL
> ### Title: Targomo Map Tiles URL
> ### Aliases: getTargomoMapURL
> 
> ### ** Examples
> 
> getTargomoMapURL(style = "toner", api_key = NULL)
[1] "https://maps.targomo.com/styles/toner-gl-style/rendered/{z}/{x}/{y}.png?key="
> 
> 
> 
> 
> cleanEx()
> nameEx("getTargomoPolygons")
> ### * getTargomoPolygons
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: getTargomoPolygons
> ### Title: Add Targomo Polygons to a Leaflet Map
> ### Aliases: getTargomoPolygons drawTargomoPolygons addTargomoPolygons
> 
> ### ** Examples
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("options")
> ### * options
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: options
> ### Title: Set Targomo Options
> ### Aliases: options targomoOptions
> 
> ### ** Examples
> 
> targomoOptions(travelType = "transit")
$travelType
[1] "transit"

$travelTimes
$travelTimes[[1]]
[1] 600

$travelTimes[[2]]
[1] 1200

$travelTimes[[3]]
[1] 1800


$intersectionMode
[1] "union"

$carRushHour
[1] FALSE

$walkSpeed
[1] 5

$walkUpHillAdjustment
[1] 10

$walkDownHillAdjustment
[1] 0

$bikeSpeed
[1] 15

$bikeUpHillAdjustment
[1] 20

$bikeDownHillAdjustment
[1] -10

$transitEarliestArrival
[1] FALSE

$edgeWeight
[1] "time"

$maxEdgeWeight
[1] 1800

$elevation
[1] FALSE

$serializer
[1] "geojson"

$srid
[1] 4326

> targomoOptions(travelTimes = list("15m", "30m", "45m", "1h"), maxEdgeWeight = "1h")
$travelType
[1] "bike"

$travelTimes
$travelTimes[[1]]
[1] 900

$travelTimes[[2]]
[1] 1800

$travelTimes[[3]]
[1] 2700

$travelTimes[[4]]
[1] 3600


$intersectionMode
[1] "union"

$carRushHour
[1] FALSE

$walkSpeed
[1] 5

$walkUpHillAdjustment
[1] 10

$walkDownHillAdjustment
[1] 0

$bikeSpeed
[1] 15

$bikeUpHillAdjustment
[1] 20

$bikeDownHillAdjustment
[1] -10

$transitEarliestArrival
[1] FALSE

$edgeWeight
[1] "time"

$maxEdgeWeight
[1] 3600

$elevation
[1] FALSE

$serializer
[1] "geojson"

$srid
[1] 4326

> 
> 
> 
> 
> cleanEx()
> nameEx("polygonDrawOptions")
> ### * polygonDrawOptions
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: polygonDrawOptions
> ### Title: Options for Drawing Polygons on the Map
> ### Aliases: polygonDrawOptions
> 
> ### ** Examples
> 
> # show the list
> polygonDrawOptions()
$stroke
[1] TRUE

$weight
[1] 5

$color
[1] "red"    "orange" "green" 

$opacity
[1] 0.5

$fill
[1] TRUE

$fillColor
[1] "red"    "orange" "green" 

$fillOpacity
[1] 0.2

$smoothFactor
[1] 1

$noClip
[1] FALSE

> 
> 
> 
> 
> cleanEx()
> nameEx("routeDrawOptions")
> ### * routeDrawOptions
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: routeDrawOptions
> ### Title: Options for Drawing Routes on the Map
> ### Aliases: routeDrawOptions
> 
> ### ** Examples
> 
> # show the list
> routeDrawOptions()
$showMarkers
[1] TRUE

$showTransfers
[1] TRUE

$walkColour
[1] "green"

$walkWeight
[1] 5

$walkDashArray
[1] "1,10"

$carColour
[1] "blue"

$carWeight
[1] 5

$bikeColour
[1] "orange"

$bikeWeight
[1] 5

$transitColour
[1] "red"

$transitWeight
[1] 5

$transferColour
[1] "blue"

$transferRadius
[1] 10

> 
> 
> 
> 
> cleanEx()
> nameEx("routes")
> ### * routes
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: routes
> ### Title: Add Targomo Routes to a Leaflet Map
> ### Aliases: routes getTargomoRoutes drawTargomoRoutes addTargomoRoutes
> 
> ### ** Examples
> 
> 
> 
> 
> 
> cleanEx()
> nameEx("setTargomoVariables")
> ### * setTargomoVariables
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: setTargomoVariables
> ### Title: Set Targomo Environment Variables
> ### Aliases: setTargomoVariables
> 
> ### ** Examples
> 
> ## Not run: 
> ##D # write to a global file at Sys.getenv("HOME")
> ##D setTargomoVariables(api_key = "YOUR_SECRET_KEY", region = "asia", overwrite = TRUE, global = TRUE)
> ## End(Not run)
> 
> 
> 
> 
> cleanEx()
> nameEx("tiles")
> ### * tiles
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: tiles
> ### Title: Add Targomo Basemaps to a Leaflet Map
> ### Aliases: tiles addTargomoTiles targomoMapStyles
> 
> ### ** Examples
> 
> # list Targomo Map Styles
> targomoMapStyles()
 [1] "basic"             "bright"            "dark"             
 [4] "dark-nolabels"     "darkblue"          "darkblue-nolabels"
 [7] "gray"              "gray-nolabels"     "light"            
[10] "light-nolabels"    "lightblue"         "toner"            
> 
> 
> 
> 
> cleanEx()
> nameEx("timeDrawOptions")
> ### * timeDrawOptions
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: timeDrawOptions
> ### Title: Options for Drawing Times on the Map
> ### Aliases: timeDrawOptions
> 
> ### ** Examples
> 
> # show the list
> timeDrawOptions()
$palette
[1] "viridis"

$type
[1] "numeric"

$maxTime
[1] 1800

$reverse
[1] FALSE

$bins
[1]  600 1200

$legend
[1] TRUE

$legendOptions
$legendOptions$position
[1] "topright"

$legendOptions$title
[1] "Travel Times"


$radius
[1] 10

$stroke
[1] TRUE

$weight
[1] 3

$color
[1] "black"

$opacity
[1] 0.5

$fill
[1] TRUE

$fillOpacity
[1] 0.5

> 
> 
> 
> 
> cleanEx()
> nameEx("timeLegendOptions")
> ### * timeLegendOptions
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: timeLegendOptions
> ### Title: Time Legend Options
> ### Aliases: timeLegendOptions
> 
> ### ** Examples
> 
> # show the list
> timeLegendOptions()
$position
[1] "topright"

$title
[1] "Travel Times"

> 
> 
> 
> 
> cleanEx()
> nameEx("times")
> ### * times
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: times
> ### Title: Add Targomo Times to a Leaflet Map
> ### Aliases: times getTargomoTimes drawTargomoTimes addTargomoTimes
> 
> ### ** Examples
> 
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.354 0.033 0.566 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
